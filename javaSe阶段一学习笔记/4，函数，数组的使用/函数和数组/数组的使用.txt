数组的打印：
打印数组里所有的个数
class Dc 
{
	public static void main(String[] args) 
	{
		int[] a = {1,2,3,4};
		for (int i=0;i<a.length;i++ )
		{
			System.out.println(a[i]);
		}
	}
}
数组的排序：d
数组的遍历：
class Eh 
{
	public static void main(String[] args) 
	{
	   int[] a = {1,2,3,4,5,6};
	   su(a);
	}
	   public static void su(int[] n)
	{
		   for (int i=0;i<n.length ;i++){
			   System.out.println(n[i]+" ");
		   }
}
}
数组的冒泡排序：
class Ei 
{
	public static void main(String[] args) 
	{
		int []  array= {1,2,3,7,1,3,9,1,45,23,2};
        printArray(array);
		ps(array);
		System.out.println();
         printArray(array);
	}	
	public static void ps(int[] array)
	{//外层的循环的轮数
		for (int i=0;i<array.length-1 ;i++ )
		{//每一轮比较的次数
			for (int j=0;j<=array.length-i-1;j++ )
			{//如果后面的数比较前面的数大就需要交换
				if (array[j]>array[j+1])
				{//定义一个临时变量
					int temp = array[j];
					//把后面的数用前面的数赋值
					array[j]=array[j+1];
					//把前面的数赋值后面的数
					array[j+1]=temp;
				}
			}
		}
	}
	public static void printArray(int[] array)
		{
		for (int i=0;i<array.length ;i++ )
		{
			System.out.print(array[i]+"\t");
		}
		}
	}
数组的查找
案例：
class Ek 
{
	public static void main(String[] args) 
	{
		int [] a= {8,8,9,5,3,2,345,43,54};
		int b = sy(a,54);
		System.out.println(b);
	}
	public static int sy(int[] a,int num)
	{
		int b = -1;
		for (int i=0;i<a.length ;i++ )
		{
			if (a[i]==num)
			{
				b=i;
				break;
			}
		}
		return b;
	}
}
数组的二分法查找：
class Fa 
{
	public static void main(String[] args) 
	{//定义一个数组
		int [] array ={4,6,7,8,9,23,55,67};//必须是有顺序的数组
		//查找
        int index=sy(array,23);
		System.out.println(index);
	}//二分法查找
	public static int sy(int [] array,int a)
	{//最小索引
		int min =0;
		//最大索引
		int max =array.length-1;
		//中间索引
		int mid =(max+min)/2;
		while (a!=array[mid])
		{//如果a大于中间索引
			if (a>array[mid])
			{//更新最小索引
				min=mid+1;
			}else{
				//更行最大索引
				max=mid-1;
		}//更新中间索引
		mid = (max+min)/2;
	}//返回目标索引
	return mid;
}
}
数组的翻转：把一个数组倒置过来
class Gd 
{
	public static void main(String[] args) 
	{
		int [] arr ={1,2,3,4,5,6,7,8,9};
		jh(arr);
		sucu(arr);
	}
	public static void jh(int[] arr)
	{
		for (int i=0;i<arr.length/2 ;i++ )
		{
			int temp =arr[i];
			arr[i]=arr[arr.length-i-1];
			arr[arr.length-i-1]=temp;
		}
	}
	public static void sucu(int [] arr)
	{
		for (int i=0;i<arr.length ;i++ )
		{
			System.out.println(arr[i]);
		}
	}
		}
二维数组：
class Hb
{
	public static void main(String[] args) 
	{//这里的数组可以定义n个；
  二维数组是数组里面的数组
	int [][] arr={{1,2,3,4},{9,8,7,6},{3,4,5,6}};
	suzu(arr);
	}
	public static void suzu(int [][]arr)
	{
		for (int i=0;i<3 ;i++ )可以换成for (int i=0;i<arr.length;i++)                              {                                    {                                  
			for (int j=0;j<4 ;j++ )     for(int j=0;j<arr[i].length;j++)
			{//通过数组那到数组如arr[0][1]可以拿到0数组中1数组的数
				System.out.print(arr[i][j]+"\t");
			}
		}
			}
		}
案例2：
class He 
{
	public static void main(String[] args) 
	{
		int [][]arr={{1,2,3,4},{5,6,7,8},{9,10,11,12},{13,14,15,16}};
        sucu(arr);
	}public static void sucu(int [][]arr)
	{
		for (int i=0;i<arr.length ;i++ )
		{
			for (int j=0;j<arr[i].length ;j++ )
			{
				System.out.print(arr[i][j]+"\t");
			}
			System.out.println();
		}
}
}
